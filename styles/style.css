body {
    font-family: sans-serif;
    background-image: url(../img/stephen-hateley-unsplash-op.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    height: 100vh;
    background-color: blue;
    margin: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
  }
  
  /* https://gomakethings.com/hidden-content-for-better-a11y/#hiding-the-link */
.screen-reader {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}
/* End code gomakethings */

/* Code MOK */

.header {
    padding: 10px;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.logo {
    flex: 1 0;
    display: flex;
    white-space: nowrap;
    align-items: center;
    justify-content: center;
}

.logo svg {
    margin: 10px;
}

.headerLinks {
    flex: 2 1;
    display: flex;
    align-items: center;
    justify-content: center;
}

@media only screen and (max-width: 680px) {
    .logo {
        flex-basis: 100%;
    }

    .headerLinks {
        flex-wrap: wrap;
        flex-display: column;
        flex-basis: 100%;
    }

    nav {
        display: flex;
        flex-direction: column;
        justify-content: center;
        width: 100%;
    }

    nav a,
    search,
    search input,
    button.login {
        flex-basis: 100%;
        width: 100%;
        text-align: center;
        padding: 8px;
    }
}

nav,
.search {
    white-space: nowrap;
    margin-right: .2rem;
}
/* End code MOK */
 
  /* CSS Xose Mendez */
  .opening-hours {
    background-color: #fff;
    text-align: center;
    padding: 2rem;
  }
  
  .opening-hours span {
    display: block;
  }
  
  .card-section {
    display: flex;
    padding: 6rem;
    justify-content: center;
  }
  
  @media (max-width: 500px) {
    .card-section {
      flex-direction: column;
    }
  }

  .card {
    background-color: #fff;
    padding: 1.4rem;
    text-align: center;
    width: fit-content;
    margin: auto;
    border-radius: 10px;
    line-height: 2rem;
    font-size: 1.4rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 1rem auto;
  }
  
  .card-button {
    transition: transform 0.3s;
    cursor: pointer;
  }
  
  .card-link {
    display: flex;
    flex-direction: column;
    justify-content: center;
    color: black;
    
  }
  
  .card-title {
    font-weight: bold;
  }
  
  .card-button:hover {
    transform: rotate(10deg);
  }
  /* End code Xose Mendez */
  /* Code Laura Blanco */
  * {
    font-family: 'Inter Tight', Helvetica, Arial, sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
    color: var(--c-hughcontrast); /*This is currently using a CSS variable, but the variable isn't defined so it defaults to white! Try typing your name into the email signup input field :D This can just be set to black for now, but I'll correct it when everything is merged into the main file. */
    /* You can read more about CSS variables here: https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties */
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  .subscribe {
      text-align: center;
      font-size: 46px;
      color: #fff;
      background: #273f63;
  /*     transform: translate(32.5%, 50%); */
      width: 60%;
    /* The reason you're having trouble here is that we don't typically have the component handle it's own positioning on the page, instead that's handled by the parent element. I'll add a parent element to the HTML so you can see how the positioning works. */
    
  /*    border: 5px solid #273f63;*/
      padding: 20px;
      
    }
  /* This is the class I've created for the parent */
  .center {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
  /*   height:500px; */
  }
  .subscribe p{
      font-size: 20px;
      margin: 7px;
      color: #bfbfbf;
    }
  .subscribe form input {
      width: 25%;
      border: none;
      padding: 7px;
      font-size: 20px;
      border-radius: 4px;
    }
  .subscribe form button {
      background-color: #FFA500;
      border: none;
      font-size: 18px;
      text-align: center;
      border-radius: 10px;
      cursor: pointer; 
      padding: 10px;
      color: #273f63;
    }
  .subscribe form button a:hover {
    color: #fff;
  }
  footer {
  /*   position: absolute; */
  /*   left: 50%; */
  /*   transform: translate(-50%, 50%); */
    
  /*   Using position: absolute is tricky as it has some unintended side effects (like creating a new stacking context), and I would caution people against it. */
  /*   Because this is the last element on the page, this will always also be at the bottom of it, so positioning isn't really needed. */
  /*   There is an  issue if the content of the page isn't the full height of the window, but that should be solved elsewhere (either on the main element or a wrapper element) */
    width: 100%;
    background: #273f63;
  /*  border-radius: 6px;*/
  }
  
  /* A 'three column' layout can also be tricky to do with flexbox, especially the one we've chosen in the design. I've switched to use a grid layout here because it's easier for what we are trying to achieve. */
  .footerGrid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 20px;
    padding: 20px;
  }
  
  @media only screen and (max-width: 680px) {
    .footerGrid {
      grid-template-columns: 1fr;
      gap: 10px;
    }
  }
  
  .footerGrid .logo {
      display: flex;
      white-space: nowrap;
      align-items: center;
      justify-content: left;
      color: #fff;
  }
  .footerGrid .logo svg {
      margin: 20px;
  }
  .footerGrid .logo p{
  /*     transform: translate(-84%,250%); */
  /*   See line 27 in the html */
      color: #bfbfbf;
      font-style: italic;
  }
  
  footer .footerRow {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 30px;
  }
  
  hr{
    margin-left:1.5%;
    width: 97%;
    color: #fff;
  }
  
  .footerRow .footerColumn h3 {
    color: #fff;
    font-size: 1.2rem;
    font-weight: 400;
    margin-top: 0px;
  }
  address {
    margin-top: 20px;
  }
  address p {
    color: #bfbfbf;
    margin-bottom: 5px;
    font-weight: 400;
    font-style: italic;
  }
  address .p a{
    color: #bfbfbf;
    margin-bottom: 5px;
    font-weight: 400;
  }
  address p a:link {
    text-decoration: none;
  }
  address p a:hover{
    color: #fff;
    margin-bottom: 5px;
    font-weight: 400;
  }
  .footerColumn .footerLinks {
    margin-top: 20px;
  }
  .footerColumn .footerLinks li {
    list-style: none;
    margin-bottom: 5px;
    color: #bfbfbf;
  }
  .footerColumn .footerLinks li a {
    text-decoration: none;
    color: #bfbfbf;
  }
  .footerColumn .footerLinks li a:hover {
    color: #fff;
  }
  .buttonApp {
    background-color: #FFA500;   
    border: none;
    padding: 10px;
    font-size: 18px;
    font-weight: bold;
  /*   position: fixed; */
  /*   left: 50%; */
  /*   transform: translate(-50%, 60%); */
    
  /*   position: fixed means that elmeent is always in the same place, regardless of where the user scrolls on the page */
    border-radius: 10px;
    color: #273f63;
    align-self: center;
  /*   While I've written above that elements should not care where they are on the page, there can be some exceptions. If we know a button should ALWAYS appear vertically centered in its parent, we can use align-self */
  }
  .buttonApp a:link {
    text-decoration: none;
  }
  .buttonApp a:hover {
    color: #fff;
  }
  /* End code Laura Blanco */
  /* Code by Tej */
  .breadcrumbs ol svg {
    width: 24px;
    vertical-align: middle;
}

.breadcrumbs{
font-family: "Roboto", sans-serif;
padding: 10px 48px;
box-shadow: 0 4px 30px -10px rgba(0, 0, 0, 0.2);
width: fit-content;
}

.breadcrumbs ol{
    display: flex;
    list-style: none;
    align-items: center;
    padding: 0;
    margin: 0;
    gap: 8px;
}

.breadcrumbs ol li a{
    text-decoration: none;
    color: #000;
}

.breadcrumbs ol li a:hover{
    color: #0984e3;
}
/* very nice use of pseudo classes */
.breadcrumbs ol li:last-child{
    font-weight: bold;
}

.breadcrumbs ol li a:not(:first-child):before{
    content: ", ";
}

.breadcrumbs ol li.arrow svg{
    width: 18px;
}
  /* End code Tej */